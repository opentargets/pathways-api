name: Publish release

on:
  push:
    tags:
      - 'v[0-9]+.[0-9]+.[0-9]+'

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: opentargets/pathways-api

jobs:
  ci:
    uses: ./.github/workflows/ci.yaml

  build-and-release:
    name: Build and Release 🚀
    runs-on: ubuntu-latest
    needs: ci
    permissions:
      contents: write
      packages: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          ref: ${{ github.ref_name }}

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.12'

      - name: Install uv
        uses: astral-sh/setup-uv@v3
        with:
          version: "latest"

      - name: Install dependencies
        run: uv sync

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: ui/package-lock.json

      - name: Install frontend dependencies
        run: |
          cd ui
          npm ci

      - name: Build frontend
        run: |
          cd ui
          npm run build

      - name: Create bundle
        run: |
          mkdir -p bundle
          # Copy only essential files for Docker build
          cp -r app bundle/
          cp -r ui/dist bundle/ui/
          cp -r ui/src/assets bundle/ui/
          cp pyproject.toml bundle/
          cp uv.lock bundle/
          cp Dockerfile bundle/
          cp .dockerignore bundle/
          cp docker-compose.yml bundle/
          cp nginx.conf bundle/
          cp Makefile bundle/
          cp README.md bundle/
          
          # Create a tar.gz archive to avoid file path issues
          cd bundle
          tar -czf ../bundle.tar.gz .
          cd ..
          
          # Remove the problematic directory and use the archive
          rm -rf bundle
          mkdir bundle
          mv bundle.tar.gz bundle/

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=raw,value=latest,enable={{is_default_branch}}

      - name: Extract bundle for Docker build
        run: |
          cd bundle
          tar -xzf bundle.tar.gz
          rm bundle.tar.gz

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: ./bundle
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Create release bundle
        run: |
          cd bundle
          tar -czf ../bundle.tar.gz .

      - name: Create draft release 🐙
        run: >-
          gh release create
          --draft
          --repo ${{ github.repository }}
          --title ${{ github.ref_name }}
          ${{ github.ref_name }}
          bundle.tar.gz
        env:
          GH_TOKEN: ${{ github.token }}
