name: Build and Push Docker Image

on:
  push:
    branches: [ main ]
    tags: [ 'v*' ]
  workflow_dispatch:
  workflow_call:

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: opentargets/pathways-api

jobs:
  build-and-image:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
    - name: Checkout code
      uses: actions/checkout@v4


    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
        cache-dependency-path: ui/package-lock.json

    - name: Install frontend dependencies
      run: |
        cd ui
        npm ci

    - name: Build frontend
      run: |
        cd ui
        npm run build

    - name: Create bundle directory
      run: |
        mkdir -p bundle
        # Copy app directory and rename files with colons
        cp -r app bundle/
        # Rename files with colons to make them artifact-compatible
        find bundle/app/data -name "*:*" -exec sh -c 'mv "$1" "$(echo "$1" | tr ":" "_")"' _ {} \;
        # Copy other essential files
        cp -r ui bundle/
        cp pyproject.toml bundle/
        cp uv.lock bundle/
        cp Dockerfile bundle/
        cp .dockerignore bundle/
        cp docker-compose.yml bundle/
        cp nginx.conf bundle/
        cp Makefile bundle/
        cp README.md bundle/
        
        # Debug: Show what's in the bundle
        echo "Bundle contents:"
        ls -la bundle/
        echo "UI directory contents:"
        ls -la bundle/ui/
        echo "UI dist directory contents:"
        ls -la bundle/ui/dist/ || echo "ui/dist not found"

    - name: Upload bundle artifact
      uses: actions/upload-artifact@v4
      with:
        name: bundle
        path: bundle/
        retention-days: 1

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Log in to Container Registry
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Extract metadata
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
        tags: |
          type=ref,event=branch
          type=ref,event=pr
          type=semver,pattern={{version}}
          type=semver,pattern={{major}}.{{minor}}
          type=raw,value=latest,enable={{is_default_branch}}

    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: ./bundle
        platforms: linux/amd64,linux/arm64
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        cache-from: type=gha
        cache-to: type=gha,mode=max
