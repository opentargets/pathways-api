name: Build

on:
  push:
    branches: [ main ]
    tags: [ 'v*' ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.12'

    - name: Install uv
      uses: astral-sh/setup-uv@v3
      with:
        version: "latest"

    - name: Install dependencies
      run: uv sync

    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
        cache-dependency-path: ui/package-lock.json

    - name: Install frontend dependencies
      run: |
        cd ui
        npm ci

    - name: Build frontend
      run: |
        cd ui
        npm run build

    - name: Create bundle
      run: |
        mkdir -p bundle
        # Copy only essential files for Docker build
        cp -r app bundle/
        cp -r ui/dist bundle/ui/
        cp pyproject.toml bundle/
        cp uv.lock bundle/
        cp Dockerfile bundle/
        cp .dockerignore bundle/
        cp docker-compose.yml bundle/
        cp nginx.conf bundle/
        cp Makefile bundle/
        cp README.md bundle/
        
        # Create a tar.gz archive to avoid file path issues
        cd bundle
        tar -czf ../bundle.tar.gz .
        cd ..
        
        # Remove the problematic directory and use the archive
        rm -rf bundle
        mkdir bundle
        mv bundle.tar.gz bundle/

    - name: Upload bundle artifact
      uses: actions/upload-artifact@v4
      with:
        name: bundle
        path: bundle
        retention-days: 1
